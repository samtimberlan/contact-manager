{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInput.js","components/contacts/AddContacts.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","dispatch","_this","setState","Axios","get","res","this","data","react_default","a","createElement","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","_callee","regenerator_default","wrap","_context","prev","next","delete","stop","_this2","_this$props","name","email","phone","className","onClick","e","style","cursor","float","color","bind","Link","to","Contacts","Fragment","Contact_Contact","key","TextInputGroup","_ref","label","onChange","placeholder","error","htmlFor","classnames","is-invalid","defaultProps","AddContacts","errors","onFormSubmit","_this$state","newContact","preventDefault","abrupt","post","sent","history","push","onStateChange","defineProperty","target","_this$state2","onSubmit","layout_TextInput","EditContact","updatedContact","match","params","put","Header","title","href","About","class","NotFound","exact","path","component","App","context_Provider","BrowserRouter","basename","layout_Header","Switch","Route","AddContact","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3edf4b18.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n//For HTTP requests\nimport Axios from \"axios\";\n\nconst Context = React.createContext();\n\n// Handling the delete event\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n\n    case \"EDIT_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  async componentDidMount() {\n    const res = await Axios.get(\"https://jsonplaceholder.typicode.com/users\");\n    this.setState({ contacts: res.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\n// import {\n//   MDBBtn,\n//   MDBCard,\n//   MDBCardBody,\n//   MDBCardImage,\n//   MDBCardTitle,\n//   MDBCardText,\n//   MDBCol\n// } from \"mdbreact\";\nimport PropTypes from \"prop-types\";\nimport { Consumer } from \"../../context\";\nimport Axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    await Axios.delete(\"https://jsonplaceholder.typicode.com/users/\" + id);\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\n  };\n\n  render() {\n    // Using Destructuring for cleaner code\n    const { name, email, phone, id } = this.props;\n    const { showContactInfo } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div>\n              {/* <MDBCol>\n              <MDBCard style={{ width: \"22rem\" }}>\n                <MDBCardBody>\n                  <MDBCardTitle>{name}</MDBCardTitle>\n                  <MDBCardText>{email}</MDBCardText>\n                  <MDBBtn href=\"#\">{phone}</MDBBtn>\n                </MDBCardBody>\n              </MDBCard>\n            </MDBCol> */}\n\n              <div className=\"card card-body mb-3\">\n                <div className=\"card-title\">\n                  {name}{\" \"}\n                  <ion-icon\n                    name=\"arrow-dropdown\"\n                    onClick={e => {\n                      this.setState({\n                        showContactInfo: !this.state.showContactInfo\n                      });\n                    }}\n                    style={{ cursor: \"pointer\" }}\n                  />\n                  <ion-icon\n                    name=\"close\"\n                    style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n                    onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                  />\n                  <Link to={`/contacts/edit/${id}`}>\n                    <ion-icon\n                      name=\"create\"\n                      style={{\n                        cursor: \"pointer\",\n                        float: \"right\",\n                        color: \"grey\"\n                      }}\n                    />\n                  </Link>\n                </div>\n                {showContactInfo ? (\n                  <ul className=\"list-group\">\n                    <li className=\"list-group-item\">Phone: {phone}</li>\n                    <li className=\"list-group-item\">Email: {email}</li>\n                  </ul>\n                ) : null}\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired\n};\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../context\";\n\nclass Contacts extends Component {\n  render() {\n    // First get the contacts using destructuring\n    return (\n      <Consumer>\n        {value => {\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4\">\n                <span className=\"text-danger\">Contact</span> List\n              </h1>\n              {value.contacts.map(contact => (\n                <Contact\n                  key={contact.id}\n                  name={contact.name}\n                  phone={contact.phone}\n                  email={contact.email}\n                  id={contact.id}\n                />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TextInputGroup = function TextInput({\n  label,\n  name,\n  type,\n  onChange,\n  value,\n  placeholder,\n  error\n}) {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        className={classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": error\n        })}\n        name={name}\n        placeholder={placeholder}\n        value={value}\n        error={error}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: \"text\"\n};\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInput from \"../layout/TextInput\";\n//import uuid from \"uuid\";\n//For HTTP requests\nimport Axios from \"axios\";\n\nclass AddContacts extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  onFormSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    //Check for errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n\n    if (phone === \"\") {\n      return this.setState({ errors: { phone: \"Phone Number is required\" } });\n    }\n\n    const newContact = {\n      //id: uuid(),\n      name,\n      email,\n      phone\n    };\n    const res = await Axios.post(\n      \"https://jsonplaceholder.typicode.com/users\",\n      newContact\n    );\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\n\n    //Clear State\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  onStateChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onFormSubmit.bind(this, dispatch)}>\n                  <TextInput\n                    label=\"Name\"\n                    placeholder=\"Name\"\n                    value={name}\n                    name=\"name\"\n                    error={errors.name}\n                    onChange={this.onStateChange}\n                  />\n                  <TextInput\n                    label=\"Email\"\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    value={email}\n                    name=\"email\"\n                    error={errors.email}\n                    onChange={this.onStateChange}\n                  />\n                  <TextInput\n                    label=\"Phone\"\n                    placeholder=\"Phone Number\"\n                    value={phone}\n                    name=\"phone\"\n                    error={errors.phone}\n                    onChange={this.onStateChange}\n                  />\n                  <button className=\"btn btn-light btn-block\" type=\"submit\">\n                    Add Contact\n                  </button>\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContacts;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInput from \"../layout/TextInput\";\n//import uuid from \"uuid\";\n//For HTTP requests\nimport Axios from \"axios\";\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await Axios.get(\n      \"https://jsonplaceholder.typicode.com/users/\" + id\n    );\n    const contact = res.data;\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onFormSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    //Check for errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n\n    if (phone === \"\") {\n      return this.setState({ errors: { phone: \"Phone Number is required\" } });\n    }\n\n    const { id } = this.props.match.params;\n    const updatedContact = {\n      name,\n      email,\n      phone\n    };\n    const res = await Axios.put(\n      \"https://jsonplaceholder.typicode.com/users/\" + id,\n      updatedContact\n    );\n\n    dispatch({ type: \"EDIT_CONTACT\", payload: res.data });\n\n    //Clear State\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  onStateChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onFormSubmit.bind(this, dispatch)}>\n                  <TextInput\n                    label=\"Name\"\n                    placeholder=\"Name\"\n                    value={name}\n                    name=\"name\"\n                    error={errors.name}\n                    onChange={this.onStateChange}\n                  />\n                  <TextInput\n                    label=\"Email\"\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    value={email}\n                    name=\"email\"\n                    error={errors.email}\n                    onChange={this.onStateChange}\n                  />\n                  <TextInput\n                    label=\"Phone\"\n                    placeholder=\"Phone Number\"\n                    value={phone}\n                    name=\"phone\"\n                    error={errors.phone}\n                    onChange={this.onStateChange}\n                  />\n                  <button className=\"btn btn-light btn-block\" type=\"submit\">\n                    Update Contact\n                  </button>\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nfunction Header(props) {\n  const { title } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {title}\n        </a>\n      </div>\n      <ul className=\"navbar-nav mr-auto\">\n        <li className=\"nav-item\">\n          <Link to=\"/\" className=\"nav-link\">\n            <ion-icon name=\"home\" />\n            Home\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link to=\"/contacts/add\" className=\"nav-link\">\n            <ion-icon name=\"add\" />\n            Add\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link to=\"/about\" className=\"nav-link\">\n            <ion-icon name=\"book\" />\n            About\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nHeader.defaultProps = {\n  title: \"Contact App\"\n};\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired\n};\nexport default Header;\n","import React from \"react\";\n\nexport default function About() {\n  return (\n    <div>\n      <h1 class=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">A simple CRUD app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class NotFound extends Component {\n  render() {\n    return (\n      <div>\n        <h1 class=\"display-4\">Page Not Found</h1>\n        <p className=\"lead\">\n          Here's a link to the homepage instead{\" \"}\n          <Link exact to=\"/\" path=\"/\" component=\"Contacts\">\n            Home\n          </Link>\n        </p>\n      </div>\n    );\n  }\n}\n","// import React, { Component } from \"react\";\n// // import logo from './logo.svg';\n// import \"./App.css\";\n\n//basename=\"process.env.PUBLIC_URL\"\n\n// class App extends Component {\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <header className=\"App-header\">\n//           <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//           <p>\n//             Edit <code>src/App.js</code> and save to reload.\n//           </p>\n//           <a\n//             className=\"App-link\"\n//             href=\"https://reactjs.org\"\n//             target=\"_blank\"\n//             rel=\"noopener noreferrer\">\n//             Learn React\n//           </a>\n//         </header>\n//       </div>\n//     );\n//   }\n// }\n\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContacts\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\n\nimport Provider from \"./context\";\n\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n// #141618\nimport \"../node_modules/three-dots/dist/three-dots.min.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router basename=\"process.env.PUBLIC_URL\">\n          <div>\n            <Header title=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contacts/add\" component={AddContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route\n                  exact\n                  path=\"/contacts/edit/:id\"\n                  component={EditContact}\n                />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}